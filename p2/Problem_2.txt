(a)

The code for this part can be found in `PopularDir.java`.

We have two jobs for this task, first counts the occurance of directors, and the second one 
just joins the directorId with the names to find their respected names.

Job1:
(Mapper) DirCounter: finds directors based on the category and produces a 1 for each id.
(Reducer) DirIdReducer: sums the occurences of each director Id.

Job2:
(Mapper) DirectorJoinMapper: if the input is the names file, we prefix the values with $ to to distinguish later
(Reducer) DirectorJoinReducer: if the values start with $, then it's a name that we should write otherwise it's the count


hadoop jar PopularDirectors.jar PopularDirectors ~/title.principals.tsv ~/name.basics.tsv ./out-dir-count ./out-results

sort -t $'\t' -k3 -rn ./out-results/part-r-* | head -n 25

nm1203430       Johnny Manahan          13087
nm1966600       Nivedita Basu           12316
nm8467983       Saibal Banerjee         11563
nm1409127       Bert De Leon            10353
nm1667633       Anil v Kumar            8961
nm7867124       Santosh Bhatt           8458
nm13220986      Conrado Lumabas         8023
nm1083609       Danie Joubert           7959
nm5236281       Silvia Abravanel        7434
nm5239804       Malu London             7433
nm5262331       Duma Ndlovu             7336
nm0051678       Mário Márcio Bandarra   6943
nm0554045       Henrique Martins        6923
nm1760906       Bobet Vidanes           6554
nm0022750       Paul Alter              6509
nm5460792       Shashank Bali           6378
nm0042771       Walter Avancini         6191
nm0565214       Kevin McCarthy          6120
nm0723330       Atílio Riccó            5778
nm2544856       Bruno De Paola          5734
nm0960965       Kaushik Ghatak          5718
nm0273084       Jorge Fernando          5699
nm1402433       Louie Ignacio           5594
nm7478784       Ajay Veermal            5467
nm5727175       S. Kumaran              5449

----------------------------------------------------------------------

(b) 
The code for this part can be found in `CoActors.java`.
We have again two mapreduce jobs for this task. The first one would create unique pairs of actors 
and the second one just counts the distinct pairs.

Job1:
(setup): In order to only keep movies we need to read the file 'title.basics' and keep the tid and tType in memory.
(Mapper) MovieMapper: if the titleType is movie and category is acting, we emit the titleId as the key and the actorId 
                      this way we would get all the people casting in the same movie in the reducer.

(Reducer) MakePairsReducer: Going through all the casts of a movie, it generates unique pairs of actors.

Job2:
It really is a simple mapreduce that counts the distinct number of pairs generated by the previous job.


hadoop jar CoActors.jar CoActors ~/title.principals.tsv ~/title.basics.tsv actor-pairs

sort -t $'\t' -k3 -rn actor-pairs/part-r-* | head -n 25 

nm0006982       nm0046850       171
nm0648803       nm2082516       147
nm0648803       nm2373718       126
nm0006982       nm0623427       125
nm0006982       nm0419653       125
nm2082516       nm2373718       113
nm0648803       nm2077739       113
nm0659173       nm1006879       104
nm2077739       nm2082516       101
nm2077739       nm2373718       97
nm0648803       nm1770187       97
nm2366585       nm2384746       96
nm1698868       nm2366585       90
nm1698868       nm2384746       86
nm1770187       nm2082516       84
nm0046850       nm0419653       84
nm0006982       nm0080246       84
nm0246703       nm0688093       81
nm0019382       nm0103977       80
nm0945427       nm2394215       74
nm0704549       nm0706691       73
nm2366585       nm2367854       73
nm0004660       nm3183374       72
nm1154608       nm3183374       72
nm1770187       nm2373718       71

-------------------------------------------------------------

(c)

I used the same code as `CoActors.java` and just modified the following lines 
to also include directors:

if (category.equals("actor") || category.equals("actress") || category.equals("director))

Then run it with the following: 

hadoop jar CoActors.jar CoActors ~/title.principals.tsv ~/title.basics.tsv ./actor-pairs

sort -t $'\t' -k3 -rn ./actor-pairs/part-r-*
